model CommandSettings {
  version       Int     @id @default(autoincrement())
  defaultPrefix String?
}

model CommandGuildSettings {
  guildId String  @id @db.VarChar(20)
  prefix  String?
}

model CommandCommandCache {
  id                 Int      @id @default(autoincrement())
  commandName        String
  expirationDateTime DateTime @db.Timestamptz(6)
  cache              Json     @db.Json

  reactionListeners CommandReactionListener[]
  responseListeners CommandResponseListener[]
}

// All listeners have cacheId as optional because Prisma didn't have support for cascading deletes
// TODO: change to required as cascading deletes is now a feature (in preview)

model CommandReactionListener {
  id        Int                                 @id @default(autoincrement())
  messageId String                              @db.VarChar(20)
  userId    String                              @db.VarChar(20)
  emojiId   String                              @db.VarChar(20)
  action    CommandReactionListenerActionFilter
  cacheId   Int?

  cache CommandCommandCache? @relation(fields: [cacheId], references: [id])

  @@unique([messageId, userId, emojiId, action, cacheId])
}

enum CommandReactionListenerActionFilter {
  Both
  Add
  Remove
}

model CommandResponseListener {
  id        Int    @id @default(autoincrement())
  channelId String @db.VarChar(20)
  userId    String @db.VarChar(20)
  cacheId   Int?

  cache CommandCommandCache? @relation(fields: [cacheId], references: [id])

  @@unique([channelId, userId, cacheId])
}
